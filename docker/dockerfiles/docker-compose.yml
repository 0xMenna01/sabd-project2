version: "3"

networks:
  project2_network:
    driver: bridge
    name: project2_network


services:

  stream_emulator:
    build: 
      dockerfile: event-producer.Dockerfile
    container_name: event-producer
    networks:
      - project2_network
    depends_on:
      - kafka
    tty : true
    volumes:
      - ../../src/kafka/monitoring-events:/home/kafka-producer/src
      - ../../dataset:/home/kafka-producer/dataset

  faust_ingestion:
    build:
      dockerfile: faust-ingestion.Dockerfile
    container_name: faust-ingestion
    networks:
      - project2_network
    depends_on:
      - kafka
    tty : true
    volumes:
      - ../../src/kafka/ingestion:/home/faust/src
    working_dir: /home/faust
    command: |
      python src/app.py worker -l info
    
    
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka-broker
    hostname: kafka-broker
    networks:
      - project2_network
    ports:
      - 9092:9092
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      # - KAFKA_KRAFT_CLUSTER_ID=228f04bc-0895-11ee-be56-0242ac120002
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-broker:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      # - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on: 
      - kafka
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
